import { type NextPage } from "next";
import Head from "next/head";
import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { api } from "~/utils/api";
import { type z } from "zod";

export interface Project {
  id: z.ZodString;
  name: z.ZodString;
  description: z.ZodString;
  url: z.ZodString;
  ownerId?: z.ZodString;
}

/*
model Project {
    id          String   @id @default(cuid())
    name        String   @db.VarChar(255)
    description String?  @db.VarChar(255)
    url         String?  @db.VarChar(255)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    ownerId     String
    owner       User     @relation(fields: [ownerId], references: [id])

    @@index([ownerId])
}
*/

export const UploadProjectWizard = () => {
  const { user } = useUser();
  if (!user) {
    return null;
  }
  return <div></div>;
};

export const ProjectsList = () => {
  const { user } = useUser();
  if (!user) {
    return null;
  }
  const projectList = api.users.getAllProjects.useQuery(user.id).data;
  console.log(projectList);
  return (
    <>
      {projectList?.map((project) => (
        <div key={project.id}>{project.name}</div>
      ))}
    </>
  );
};

const ProjectsPage: NextPage = () => {
  const user = useUser();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center ">
        <div>
          {!user.isSignedIn && <SignInButton />}
          {!!user.isSignedIn && (
            <>
              <SignOutButton />
              <ProjectsList />
            </>
          )}
        </div>
        <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
      </main>
    </>
  );
};

export default ProjectsPage;
